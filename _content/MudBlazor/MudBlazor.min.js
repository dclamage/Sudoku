function getTabbableElements(element){return element.querySelectorAll("a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']):not([type='hidden']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),details:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1']")}window.clipboardCopy={copyText:function(text){navigator.clipboard.writeText(text)}};window.getMudBoundingClientRect=element=>element.getBoundingClientRect();window.changeCss=(element,css)=>{element.className=css};window.changeCssById=(id,css)=>{var element=document.getElementById(id);element&&(element.className=css)};window.changeGlobalCssVariable=(name,newValue)=>{document.documentElement.style.setProperty(name,newValue)};window.changeCssVariable=(element,name,newValue)=>{element.style.setProperty(name,newValue)};window.addTranstionEndListener=(element,dotnet)=>{element.addEventListener("transitionend",function(){dotnet.invokeMethodAsync("TransitionEnd")})};window.elementReference={focus:function(element){element.focus()},focusFirst:function(element,skip=0,min=0){var tabbables=getTabbableElements(element);tabbables.length<=min?element.focus():tabbables[skip].focus()},focusLast:function(element,skip=0,min=0){var tabbables=getTabbableElements(element);tabbables.length<=min?element.focus():tabbables[tabbables.length-skip-1].focus()},saveFocus:function(element){element.mudblazor_savedFocus=document.activeElement},restoreFocus:function(element){var previous=element.mudblazor_savedFocus;delete element.mudblazor_savedFocus;previous&&previous.focus()}};window.resizeListener={logger:function(){},options:{},throttleResizeHandlerId:-1,dotnet:undefined,listenForResize:function(dotnetRef,options){this.options=options;this.dotnet=dotnetRef;this.logger=options.enableLogging?console.log:()=>{};this.logger(`[MudBlazor] Reporting resize events at rate of: ${(this.options||{}).reportRate||100}ms`);window.addEventListener("resize",this.throttleResizeHandler.bind(this),!1);this.options.suppressInitEvent||this.resizeHandler()},throttleResizeHandler:function(){clearTimeout(this.throttleResizeHandlerId);this.throttleResizeHandlerId=window.setTimeout(this.resizeHandler.bind(this),(this.options||{}).reportRate||100)},resizeHandler:function(){try{this.dotnet.invokeMethodAsync("RaiseOnResized",{height:window.innerHeight,width:window.innerWidth})}catch(error){this.logger("[MudBlazor] Error in resizeHandler:",{error})}},cancelListener:function(){window.removeEventListener("resize",this.throttleResizeHandler)},matchMedia:function(query){return window.matchMedia(query).matches},getBrowserWindowSize:function(){return{height:window.innerHeight,width:window.innerWidth}}};window.scrollHelpers={scrollToFragment:(elementId,behavior)=>{let element=document.getElementById(elementId);element&&element.scrollIntoView({behavior,block:"center",inline:"start"})},scrollToYear:elementId=>{var element=document.getElementById(elementId);element&&(element.parentNode.scrollTop=element.offsetTop-element.parentNode.offsetTop-element.scrollHeight*3)},scrollToListItem:(elementId,increment,onEdges)=>{let element=document.getElementById(elementId);if(element){let parent=element.parentElement;if(increment==0){parent.scrollTop=0;return}let{bottom:eBottom,height:eHeight,top:eTop}=element.getBoundingClientRect(),{bottom:pBottom,top:pTop}=parent.getBoundingClientRect();(pBottom-eBottom<=0&&increment>0||eTop-pTop<=0&&increment<0||!onEdges)&&(parent.scrollTop+=eHeight*increment)}},scrollTo:(selector,left,top,behavior)=>{element=document.querySelector(selector)||document.documentElement,element.scrollTo({left,top,behavior})},lockScroll:selector=>{let element=document.querySelector(selector)||document.body;element.classList.add("scroll-locked")},unlockScroll:selector=>{let element=document.querySelector(selector)||document.body;element.classList.remove("scroll-locked")}};window.scrollListener={throttleScrollHandlerId:-1,listenForScroll:function(dotnetReference,selector){let element=selector?document.querySelector(selector):document;element.addEventListener("scroll",this.throttleScrollHandler.bind(this,dotnetReference),!1)},throttleScrollHandler:function(dotnetReference,event){clearTimeout(this.throttleScrollHandlerId);this.throttleScrollHandlerId=window.setTimeout(this.scrollHandler.bind(this,dotnetReference,event),100)},scrollHandler:function(dotnetReference,event){try{let element=event.target,scrollTop=element.scrollTop,scrollHeight=element.scrollHeight,scrollWidth=element.scrollWidth,scrollLeft=element.scrollLeft,nodeName=element.nodeName,firstChild=element.firstElementChild,firstChildBoundingClientRect=firstChild.getBoundingClientRect();dotnetReference.invokeMethodAsync("RaiseOnScroll",{firstChildBoundingClientRect,scrollLeft,scrollTop,scrollHeight,scrollWidth,nodeName})}catch(error){console.log("[MudBlazor] Error in scrollHandler:",{error})}},cancelListener:function(selector){let element=selector?document.querySelector(selector):document.documentElement;element.removeEventListener("scroll",this.throttleScrollHandler)}};window.mbSelectHelper={selectRange:(el,pos1,pos2)=>{if(el.createTextRange){var selRange=el.createTextRange();selRange.collapse(!0);selRange.moveStart("character",pos1);selRange.moveEnd("character",pos2);selRange.select()}else el.setSelectionRange?el.setSelectionRange(pos1,pos2):el.selectionStart&&(el.selectionStart=pos1,el.selectionEnd=pos2);el.focus()},select:el=>{el.select()}};